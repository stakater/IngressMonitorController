name: Pull Request

on:
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '*.md'
      - 'docs/'
      - 'examples/'
      - 'hack/'
      - 'config/'
env:
  DOCKER_FILE_PATH: Dockerfile
  GOLANG_VERSION: 1.21
  HELM_VERSION: v3.8.2
  KIND_VERSION: "v0.17.0"
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    name: Pull Request

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.sha}}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.54
        only-new-issues: false
        args: --timeout 10m

    # Set up helm binary
    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Helm Lint
      run: |
        helm lint charts/ingressmonitorcontroller

    # - name: Install kind
    #   uses: engineerd/setup-kind@v0.5.0
    #   with:
    #     version:  ${{ env.KIND_VERSION }}

    # - name: Check cluster info
    #   run: |
    #     kubectl version --client
    #     kind version
    #     kind version | grep -q ${KIND_VERSION}

    # - name: Set up Cluster
    #   run: |
    #     kubectl cluster-info
    #     make install
    #     mkdir -p .local
    #     echo "${{ secrets.SECRET_KUBERNETES_RESOURCES }}" | base64 --decode > .local/test-config.yaml

    # - name: Test
    #   run: make test

    - name: Generate Tag
      id: generate_tag
      run: |
        sha=${{ github.event.pull_request.head.sha }}
        tag="SNAPSHOT-PR-${{ github.event.pull_request.number }}-${sha:0:8}"
        echo "GIT_TAG=$(echo ${tag})" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug

    - name: Generate image repository path for ghcr registry
      run: |
        echo GHCR_IMAGE_REPOSITORY=${{env.REGISTRY}}/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    # To identify any broken changes in dockerfiles or dependencies

    - name: Build image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ env.DOCKER_FILE_PATH  }}
        pull: true
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: BUILD_PARAMETERS=${{ env.BUILD_PARAMETERS }}
        platforms: linux/amd64,linux/arm,linux/arm64
        tags: |
          ${{ env.GHCR_IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
