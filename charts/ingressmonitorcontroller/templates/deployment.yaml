apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ingress-monitor-controller.fullname" . }}
  namespace: {{ include "ingress-monitor-controller.namespace" . }}
  labels:
    {{- include "ingress-monitor-controller.labels" . | nindent 4 }}
    control-plane: controller-manager
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ingress-monitor-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- toYaml .Values.podLabels | nindent 8}}
        {{- include "ingress-monitor-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ingress-monitor-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --max-concurrent-reconciles={{ .Values.maxConcurrentReconciles }}
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: {{ .Values.watchNamespaces | quote }}
        - name: CONFIG_SECRET_NAME
          value: {{ default "imc-config" .Values.configSecretName }}
        {{- if gt (len .Values.env) 0 }}
        {{- toYaml .Values.env | nindent 8 }}
        {{- end }}
        {{- if gt (len .Values.envFrom) 0 }}
        envFrom:
        {{- toYaml .Values.envFrom | nindent 8 }}
        {{- end }}
        name: manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
